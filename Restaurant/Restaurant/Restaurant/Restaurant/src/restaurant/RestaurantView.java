/*
 * RestaurantView.java
 */

package restaurant;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * The application's main frame.
 */
public class RestaurantView extends FrameView {
/* TODO :
     1. MOve all inputs to variables before  calculation
     2. Calculate Amount  Due and taxes
     3. Only show fruits if fruit box checked
     4. Have reset button  turn all radio buttons , check boxes off
     5. Perform edits on radio buttons, meaning one should be picked (create a method returning boolean to do this)
     6. Update Progress Status Bar based upon entries
     7. Prompt user if no side or fruits to be sure they were considered
     8. Try to put a logo image near the Restaurant name
     * */
    double sandwich, fries, salad, fruit, total = 0, side = 0, fruitchk = 0, buttoncount = 0;
    int statusbar = 0;
    DecimalFormat df = new DecimalFormat("#.##");
    public RestaurantView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = RestaurantApp.getApplication().getMainFrame();
            aboutBox = new RestaurantAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        RestaurantApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        radHB = new javax.swing.JRadioButton();
        radCB = new javax.swing.JRadioButton();
        radChicken = new javax.swing.JRadioButton();
        chkFF = new javax.swing.JCheckBox();
        chkSalad = new javax.swing.JCheckBox();
        chkFruit = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstFruits = new javax.swing.JList();
        btnReset = new javax.swing.JButton();
        txtTax = new javax.swing.JTextField();
        btnCalc = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        txtFoodAmount = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTotalAmount = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        buttonGroup1 = new javax.swing.ButtonGroup();

        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(restaurant.RestaurantApp.class).getContext().getResourceMap(RestaurantView.class);
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        mainPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, -1, -1));

        buttonGroup1.add(radHB);
        radHB.setText(resourceMap.getString("radHB.text")); // NOI18N
        radHB.setName("radHB"); // NOI18N
        radHB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radHBActionPerformed(evt);
            }
        });
        mainPanel.add(radHB, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        buttonGroup1.add(radCB);
        radCB.setText(resourceMap.getString("radCB.text")); // NOI18N
        radCB.setName("radCB"); // NOI18N
        radCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radCBActionPerformed(evt);
            }
        });
        mainPanel.add(radCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, 20));

        buttonGroup1.add(radChicken);
        radChicken.setText(resourceMap.getString("radChicken.text")); // NOI18N
        radChicken.setName("radChicken"); // NOI18N
        radChicken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radChickenActionPerformed(evt);
            }
        });
        mainPanel.add(radChicken, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        chkFF.setText(resourceMap.getString("chkFF.text")); // NOI18N
        chkFF.setName("chkFF"); // NOI18N
        chkFF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFFActionPerformed(evt);
            }
        });
        mainPanel.add(chkFF, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        chkSalad.setText(resourceMap.getString("chkSalad.text")); // NOI18N
        chkSalad.setName("chkSalad"); // NOI18N
        chkSalad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSaladActionPerformed(evt);
            }
        });
        mainPanel.add(chkSalad, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, -1));

        chkFruit.setText(resourceMap.getString("chkFruit.text")); // NOI18N
        chkFruit.setName("chkFruit"); // NOI18N
        chkFruit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFruitActionPerformed(evt);
            }
        });
        mainPanel.add(chkFruit, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, -1, -1));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        lstFruits.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Apple", "Orange", "Banana" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstFruits.setEnabled(false);
        lstFruits.setName("lstFruits"); // NOI18N
        jScrollPane1.setViewportView(lstFruits);

        mainPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, -1, 60));

        btnReset.setText(resourceMap.getString("btnReset.text")); // NOI18N
        btnReset.setName("btnReset"); // NOI18N
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        mainPanel.add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, -1, -1));

        txtTax.setText(resourceMap.getString("txtTax.text")); // NOI18N
        txtTax.setName("txtTax"); // NOI18N
        mainPanel.add(txtTax, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 150, 80, 20));

        btnCalc.setText(resourceMap.getString("btnCalc.text")); // NOI18N
        btnCalc.setName("btnCalc"); // NOI18N
        btnCalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcActionPerformed(evt);
            }
        });
        mainPanel.add(btnCalc, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, -1, -1));

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        mainPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 150, -1, -1));

        jProgressBar1.setName("jProgressBar1"); // NOI18N
        mainPanel.add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 280, -1, 10));

        txtFoodAmount.setName("txtFoodAmount"); // NOI18N
        mainPanel.add(txtFoodAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 120, 80, 20));

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        mainPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, -1, -1));

        txtTotalAmount.setText(resourceMap.getString("txtTotalAmount.text")); // NOI18N
        txtTotalAmount.setName("txtTotalAmount"); // NOI18N
        mainPanel.add(txtTotalAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 180, 80, 20));

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        mainPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, -1, -1));

        jLabel5.setIcon(resourceMap.getIcon("jLabel5.icon")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        mainPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, 90, 70));

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(restaurant.RestaurantApp.class).getContext().getActionMap(RestaurantView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 363, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void chkFruitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFruitActionPerformed
        if(chkFruit.isSelected() == true){
            lstFruits.setEnabled(true);
            jProgressBar1.setValue(statusbar+=20);
        }else{
            lstFruits.setEnabled(false);
            jProgressBar1.setValue(statusbar-=20);
        }
    }//GEN-LAST:event_chkFruitActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        chkFF.setSelected(false);
        chkSalad.setSelected(false);
        chkFruit.setSelected(false);
        txtFoodAmount.setText("");
        txtTax.setText("");
        txtTotalAmount.setText("");
        side = 0;
        fruitchk = 0;
        jProgressBar1.setValue(0);
        buttoncount = 0;
        buttonGroup1.clearSelection();
    }//GEN-LAST:event_btnResetActionPerformed

    private void radHBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radHBActionPerformed
            if(buttoncount == 0){
                jProgressBar1.setValue(statusbar+=25);
            }
            buttoncount++;
    }//GEN-LAST:event_radHBActionPerformed

    private void radCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radCBActionPerformed
            if(buttoncount == 0){
                jProgressBar1.setValue(statusbar+=25);
            }
            buttoncount++;
    }//GEN-LAST:event_radCBActionPerformed

    private void radChickenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radChickenActionPerformed
            if(buttoncount == 0){
                jProgressBar1.setValue(statusbar+=25);
            }
            buttoncount++;
    }//GEN-LAST:event_radChickenActionPerformed

    private void btnCalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcActionPerformed
        jProgressBar1.setValue(100);
        if(radHB.isSelected() == false && radCB.isSelected() == false && radChicken.isSelected() == false){
            JOptionPane.showMessageDialog(null,"Please select a sandwich");
        }
        if(chkFF.isSelected() == false && chkSalad.isSelected() == false && side == 0){
            JOptionPane.showMessageDialog(null,"Have you considered some side orders?");
            side++;
        }
        if(chkFruit.isSelected() == false && fruitchk == 0){
            JOptionPane.showMessageDialog(null,"May I recommend adding some fruit to your order?");
            fruitchk++;
        }
        if(radHB.isSelected() == true){
            total += 1.50;
        }
        if(radCB.isSelected() == true){
            total += 2.50;
        }
        if(radChicken.isSelected() == true){
            total += 3;
        }
        if(chkFruit.isSelected() == true){
            total += .75;
        }
        if(chkFF.isSelected() == true){
            total += 1.50;
        }
        if(chkSalad.isSelected() == true){
            total += 2;
        }
        txtFoodAmount.setText(String.valueOf(df.format(total)));
        txtTax.setText(String.valueOf(df.format(total * .0875)));
        txtTotalAmount.setText(String.valueOf(df.format(total * 1.0875)));
        total = 0;
    }//GEN-LAST:event_btnCalcActionPerformed

    private void chkFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFFActionPerformed
        if(chkFF.isSelected() == true){
            jProgressBar1.setValue(statusbar+=20);
        }else{
            jProgressBar1.setValue(statusbar-=20);
        }
    }//GEN-LAST:event_chkFFActionPerformed

    private void chkSaladActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSaladActionPerformed
        if(chkSalad.isSelected() == true){
            jProgressBar1.setValue(statusbar+=20);
        }else{
            jProgressBar1.setValue(statusbar-=20);
        }
    }//GEN-LAST:event_chkSaladActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalc;
    private javax.swing.JButton btnReset;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkFF;
    private javax.swing.JCheckBox chkFruit;
    private javax.swing.JCheckBox chkSalad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstFruits;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JRadioButton radCB;
    private javax.swing.JRadioButton radChicken;
    private javax.swing.JRadioButton radHB;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JTextField txtFoodAmount;
    private javax.swing.JTextField txtTax;
    private javax.swing.JTextField txtTotalAmount;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
